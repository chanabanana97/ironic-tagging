openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: Posts
  - name: Politicians

paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
        "401":
          description: Authentication failed
  /posts/getPostsOfPolitician/{politicianName}:
    get:
      tags:
        - Posts
      description: get post ids of politician
      parameters:
        - in: path
          name: politicianName
          required: true
          schema:
            type: string
            example: Naftali Bennett
      responses:
        "200":
          description: list of ids of posts by politician 
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: ["396697410351933_2870993109589005"]
  /posts/getPostFromId/{postId}:
    get:
      tags:
        - Posts
      description: get post text from post id
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
            example: "396697410351933_2870993109589005"
      responses:
        "200":
          description: message of the post
          content:
            application/json:
              schema:
                type: string
                example: ביבי המלך!
  /posts/labelPost:
    post:
      tags:
        - Posts
      description: label a post according to criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelPost"
      responses:
        "200":
          description: "post label added successfully"
  /posts/getPostsFromCategory:
    get:
      tags:
        - Posts
      description: get posts from a category with a certain label. for example, from the subject category with the label political
      parameters:
        - in: query
          name: category
          required: true
          content:
            application/json:
              schema:
                type: string
                example: subject

        - in: query
          name: label
          required: true
          content:
            application/json:
              schema:
                type: string
                example: אישי

      responses:
        "200":
          description: all posts that are labeled 'label' in the column 'category' returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        

  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has been successfully logged out"          

  /Politicians/getPolitician/{politicianName}:
    get:
      summary: Return the politician that selected
      description: useful for politician page
      tags:
        - Politicians
      parameters:
        - in: path
          name: politicianName
          description: Bibi
          required: true
          schema:
            type: string
      responses:
        "200":
          description: data about the politician
          # content:
          #   application/json:
              # schema:
              #   $ref: "#/components/schemas/PlayerFullDetails"
        "404":
          description: playerID does not exists

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: chana
        password:
          type: string
          format: password
          example: banana
        # isExpert:
        #   type: Boolean
        #   example: true
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          example: chana
        password:
          type: string
          format: password
          example: banana
    LabelPost:
      type: object
      properties:
        postId:
          type: string
          example: "396697410351933_2870993109589005"
        username:
          type: string
          example: chana
        subject:
          type: array
          example: [אישי,פוליטי]
        style:
          type: array
          example: [רשמיות]
        emotion:
          type: array
          example: [האדרה עצמית]
        freeText:
          type: string
          example: הערות...
    Post:
      type: object
      properties:
        postId:
          type: string
          example: "396697410351933_2870993109589005"
        politicianName:
          type: string
          example: Naftali Benett
        message:
          type: string
          example:  בני גנץ ובוגי יעלון וסיעת ״כחול לבן״ זימנו דיון מיוחד בכנסת כדי לתקוף אותי כשר הביטחון ואת רה״מ.
          

          


    

